package com.example.frontend.apiimport com.example.frontend.model.MissionModelimport com.example.frontend.utilities.BASE_URLimport com.example.frontend.utilities.GsonProviderimport okhttp3.OkHttpClientimport okhttp3.logging.HttpLoggingInterceptorimport retrofit2.Callimport retrofit2.Retrofitimport retrofit2.converter.gson.GsonConverterFactoryimport retrofit2.http.GETimport retrofit2.http.POSTimport retrofit2.http.PathinterfaceMissionService {    @POST("/missions/{title}/mark_completed")    fun markMissionCompleted(@Path("title") missionTitle: String): Call<Boolean>    @GET("/missions")    fun getMissionList() : Call<List<MissionModel>>    companion object {        fun create(): MissionService {            val logger = HttpLoggingInterceptor().apply { level = HttpLoggingInterceptor.Level.BASIC }            val client = OkHttpClient.Builder()                .addInterceptor(logger)                .build()            return Retrofit.Builder()                .baseUrl(BASE_URL)                .client(client)                .addConverterFactory(GsonConverterFactory.create(GsonProvider.gson))                .build()                .create(MissionService::class.java)        }    }}